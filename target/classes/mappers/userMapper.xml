<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
 <mapper namespace="ams.user.mapper.userMapper">
   <insert id="signup">
    INSERT INTO USERS(USER_ID, USER_PW, USER_NAME, USER_EMAIL)
       					VALUES(#{userId}, #{userPw}, #{userName}, #{userEmail})
   </insert>
   
   <insert id="signupOAuth">
    INSERT INTO OAUTH_USERS(USER_ID, USER_NAME, USER_EMAIL, ACCESS_TOKEN, REFRESH_TOKEN)
       					VALUES(#{userId}, #{userName}, #{userEmail}, #{accessToken}, #{refreshToken})
   </insert>
   
   <insert id="setAuthority">
   	INSERT INTO AUTHORITIES(USER_ID)
   							VALUES(#{userId})
   </insert>
   
   <insert id="setOAuthAuthority">
   	INSERT INTO OAUTH_AUTHORITIES(USER_ID)
   							VALUES(#{userId})
   </insert>
   
   <select id="idChk" resultType="int">
   	SELECT COUNT(*) FROM USERS WHERE USER_ID = #{userId}
   </select>
   
   <select id="OAuthIdChk" resultType="int">
   	SELECT COUNT(*) FROM OAUTH_USERS WHERE USER_ID = #{userId}
   </select>
   
   <select id="nameChk" resultType="int">
   	SELECT COUNT(*) FROM USERS WHERE USER_NAME = #{userName}
   </select>
   
   <select id="OAuthNameChk" resultType="int">
   	SELECT COUNT(*) FROM OAUTH_USERS WHERE USER_NAME = #{userName}
   </select>
   
   <select id="emailChk" resultType="int">
   	SELECT COUNT(*) FROM USERS WHERE USER_EMAIL = #{userEmail}
   </select>
   
   <select id="OAuthEmailChk" resultType="int">
   	SELECT COUNT(*) FROM OAUTH_USERS WHERE USER_EMAIL = #{userEmail}
   </select>
   
   <select id="pwChk" resultType="int">
   	SELECT COUNT(*) FROM USERS WHERE USER_PW = #{userPw} AND USER_ID = #{userId}
   </select>
   
   <delete id="signout" parameterType="ams.user.domain.UserVO">
   	DELETE FROM USERS WHERE USER_ID = #{userId};
   </delete>
   
   <delete id="signoutOAuth" parameterType="ams.user.domain.OAuthUserVO">
   	DELETE FROM OAUTH_USERS WHERE USER_ID = #{userId};
   </delete>
   
   <select id="getUserInfo" resultType="ams.user.domain.UserVO">
   	SELECT * FROM USERS WHERE USER_ID = #{userId}
   </select>
   
   <select id="getOAuthUserInfo" resultType="ams.user.domain.OAuthUserVO">
   	SELECT * FROM OAUTH_USERS WHERE USER_ID = #{userId}
   </select>
   
   <select id="getOAuthUserAuthority" resultType="String">
   	SELECT AUTHORITY FROM OAUTH_AUTHORITIES WHERE USER_ID = #{userId}
   </select>
   
   <select id="findUser" resultType="String">
      SELECT USER_NAME FROM USERS WHERE USER_ID=#{userId}
   </select>
   
   <update id="modifyUser" parameterType="ams.user.domain.UserVO">
      UPDATE USERS SET USER_NAME = #{userName}, USER_EMAIL=#{userEmail} WHERE USER_ID=#{userId}
   </update>
   
   <update id="modifyOAuthUser" parameterType="ams.user.domain.OAuthUserVO">
      UPDATE OAUTH_USERS SET USER_NAME = #{userName}, USER_EMAIL=#{userEmail} WHERE USER_ID=#{userId}
   </update>
   
   <update id="updateOAuthToken" parameterType="ams.user.domain.OAuthUserVO">
   		UPDATE OAUTH_USERS SET ACCESS_TOKEN = #{accessToken}, REFRESH_TOKEN = #{refreshToken} WHERE USER_ID = #{userId}
   </update>
</mapper>
  