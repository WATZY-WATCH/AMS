<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
 <mapper namespace="ams.group.mapper.groupMapper">
   <insert id="groupCreate" useGeneratedKeys="true" keyProperty="groupId" >
   INSERT INTO STUDY_GROUPS(GROUP_CATEGORY, GROUP_MASTER_ID, GROUP_NAME, GROUP_DETAIL, GROUP_MEMBER_LIMIT, GROUP_PERIOD, GROUP_AREA, GROUP_START_AGE, GROUP_END_AGE)
       					VALUES(#{groupCategory}, #{groupMasterId}, #{groupName}, #{groupDetail}, #{groupMemberLimit}, #{groupPeriod},#{groupArea},#{groupStartAge},#{groupEndAge})
   </insert>
   <insert id="groupCreateMember">
    INSERT INTO GROUP_MEMBERS(GROUP_ID, USER_ID, GROUP_AUTHORITY)
       					VALUES(#{groupId}, #{userId}, #{groupAuthority})
   </insert>
   
   <insert id="createSchedule" parameterType="GroupScheduleVO">
   	INSERT INTO GROUP_SCHEDULES(GROUP_ID, PLACE_LATITUDE, PLACE_LONGITUDE, PLACE_ADDRESS, BUILDING_NAME, BEGIN_TIME, END_TIME)
   							VALUES(#{groupId}, #{placeLatitude}, #{placeLongitude}, #{placeAddress}, #{buildingName}, #{beginTime}, #{endTime})
   </insert>
   
   <update id="modifySchedule" parameterType="GroupScheduleVO">
   	UPDATE GROUP_SCHEDULES SET PLACE_LATITUDE = #{placeLatitude}, PLACE_LONGITUDE = #{placeLongitude}, PLACE_ADDRESS = #{placeAddress}, BUILDING_NAME = #{buildingName}, BEGIN_TIME = #{beginTime}, END_TIME = #{endTime}
													 WHERE GROUP_ID = #{groupId} AND SCHEDULE_ID = #{scheduleId}   	
   </update>
   
   <delete id="deleteSchedule">
   	DELETE FROM GROUP_SCHEDULES WHERE SCHEDULE_ID = #{scheduleId}
   </delete>
   
   <select id="getScheduleList" resultType="GroupScheduleVO">
   	SELECT GS.*, SG.GROUP_NAME FROM GROUP_SCHEDULES GS
   	LEFT JOIN STUDY_GROUPS SG ON GS.GROUP_ID = SG.GROUP_ID
   	WHERE GS.GROUP_ID = #{groupId} AND GS.BEGIN_TIME BETWEEN #{startDate} AND #{endDate}
   	ORDER BY BEGIN_TIME ASC
   </select>
 	
 	<resultMap id="listUserName" type="UserVO">
	    <result property="userName" column="USER_NAME"/>
	</resultMap>
 	<resultMap id="listGroupVO" type="GroupVO">
	    <result property="groupId" column="GROUP_ID"/>
	    <result property="groupCategory" column="GROUP_CATEGORY"/>
	    <result property="groupName" column="GROUP_NAME"/>
	    <result property="groupDetail" column="GROUP_DETAIL"/>
	    <result property="groupMemberCnt" column="GROUP_MEMBER_CNT"/>
	    <result property="groupMemberLimit" column="GROUP_MEMBER_LIMIT"/>
	    <result property="groupPeriod" column="GROUP_PERIOD"/>
	    <result property="groupArea" column="GROUP_AREA"/>
	    <result property="groupStatus" column="GROUP_STATUS"/>
	    <result property="groupStartAge" column="GROUP_START_AGE"/>
	    <result property="groupEndAge" column="GROUP_END_AGE"/>
	    <result property="regDate" column="REG_DATE"/>
	    <result property="modDate" column="MOD_DATE"/>
	    <result property="groupViewCnt" column="GROUP_VIEW_CNT"/>
	    <result property="groupCommentCnt" column="GROUP_COMMENT_CNT"/>
	    <collection property="userVO" resultMap="listUserName"/>
	</resultMap>
 	<select id="listSearch" resultMap="listGroupVO">
 	<![CDATA[
 	select
 		SG.GROUP_ID
 		, SG.GROUP_CATEGORY 
 		, SG.GROUP_NAME
 		, SG.GROUP_DETAIL
 		, SG.GROUP_MEMBER_CNT
 		, SG.GROUP_MEMBER_LIMIT
 		, SG.GROUP_PERIOD
 		, SG.GROUP_AREA
 		, SG.GROUP_STATUS
 		, SG.GROUP_START_AGE
 		, SG.GROUP_END_AGE
 		, SG.REG_DATE
 		, SG.MOD_DATE
 		, SG.GROUP_VIEW_CNT
 		, SG.GROUP_COMMENT_CNT
 		, U.USER_NAME
 	FROM
 		STUDY_GROUPS SG
 	LEFT JOIN
 		USERS U
 	ON
 		SG.GROUP_MASTER_ID = U.USER_ID
 	WHERE SG.GROUP_ID>0 AND (SG.GROUP_STATUS='모집중' OR SG.GROUP_STATUS='진행중')
 	]]>
 	<include refid="search"></include>
 	<![CDATA[
 	ORDER BY SG.GROUP_ID DESC, SG.REG_DATE DESC
 	LIMIT #{pageStart},#{perPageNum}
 	]]>
 	</select>
 	
 	<select id="listSearchCount" resultType="int">
 	<![CDATA[
 	select
 		count(SG.GROUP_ID)
 	FROM
 		STUDY_GROUPS SG
 	LEFT JOIN
 		USERS U
 	ON
 		SG.GROUP_MASTER_ID = U.USER_ID
 	where group_id>0 and (group_status='모집중' or group_status='진행중')
 	]]>
 		<include refid="search"></include>
 	</select>
 	<select id="listRead" parameterType="GroupVO" resultMap="listGroupVO">
 	<![CDATA[
 	select
 		SG.GROUP_ID
 		, SG.GROUP_CATEGORY 
 		, SG.GROUP_NAME
 		, SG.GROUP_DETAIL
 		, SG.GROUP_MEMBER_CNT
 		, SG.GROUP_MEMBER_LIMIT
 		, SG.GROUP_PERIOD
 		, SG.GROUP_AREA
 		, SG.GROUP_STATUS
 		, SG.GROUP_START_AGE
 		, SG.GROUP_END_AGE
 		, SG.REG_DATE
 		, SG.MOD_DATE
 		, SG.GROUP_VIEW_CNT
 		, SG.GROUP_COMMENT_CNT
 		, U.USER_NAME
 	FROM
 		STUDY_GROUPS SG
 	LEFT JOIN
 		USERS U
 	ON
 		SG.GROUP_MASTER_ID = U.USER_ID
 	WHERE SG.GROUP_ID=#{groupId}
 	]]>
 	</select>
 	
 	<select id="getSchedule" resultType="GroupScheduleVO">
 		SELECT * FROM GROUP_SCHEDULES WHERE GROUP_ID = #{groupId} AND SCHEDULE_ID = ${scheduleId}
 	</select>
 	
 	<update id="updateViewCnt">
  		update study_groups set GROUP_VIEW_CNT = GROUP_VIEW_CNT +1 where group_id = #{groupId}
	</update>
 	<select id="memberChk" resultType="int">
      SELECT COUNT(*) FROM GROUP_MEMBERS WHERE USER_ID=#{userId} AND GROUP_ID=#{groupId}
   </select>
   
   <insert id="listApply">
    INSERT INTO GROUP_APPLICATIONS(GROUP_ID, USER_ID, MSG)
       					VALUES(#{groupId}, #{userId}, #{msg})
   </insert>
   
   <select id="listApplyChk" resultType="int">
      SELECT COUNT(*) FROM GROUP_APPLICATIONS WHERE USER_ID=#{userId} AND GROUP_ID=#{groupId}
   </select>
   <sql id="search">
   	<if test="searchType != null">
   		<if test="searchType=='t'.toString()">
   			and SG.GROUP_NAME like CONCAT ('%',#{keyword}, '%')
   		</if>
   		<if test="searchType=='c'.toString()">
   			and SG.GROUP_DETAIL like CONCAT ('%',#{keyword}, '%')
   		</if>
   		<if test="searchType=='w'.toString()">
   			and U.USER_NAME like CONCAT ('%',#{keyword}, '%')
   		</if>
   		<if test="searchType=='tc'.toString()">
   			and (SG.GROUP_NAME like CONCAT ('%',#{keyword}, '%')
   			OR SG.GROUP_DETAIL like CONCAT('%',#{keyword}, '%'))
   		</if>
   		<if test="searchType=='cw'.toString()">
   			and (SG.GROUP_DETAIL like CONCAT ('%',#{keyword}, '%')
   			OR U.USER_NAME like CONCAT ('%',#{keyword}, '%'))
   		</if>
   		<if test="searchType=='tcw'.toString()">
   			and (SG.GROUP_NAME like CONCAT ('%',#{keyword}, '%')
   			OR SG.GROUP_DETAIL like CONCAT ('%',#{keyword}, '%')
   			OR U.USER_NAME like CONCAT ('%',#{keyword}, '%'))
   		</if>
   	</if>
   	<if test="category != null" >
 		and(
		<foreach item="categoryList" collection="category" separator="or ">
		 GROUP_CATEGORY =
		 <if test="categoryList == 'ce'">
		  '자격증'
		 </if>
		 <if test="categoryList == 'co'">
		  '건설/설계'
		 </if>
		 <if test="categoryList == 'me'">
		  '미디어/디자인'
		 </if>
		 <if test="categoryList == 'ma'">
		  '마케팅/기획/영업'
		 </if>
		 <if test="categoryList == 'ci'">
		  '유통/무역'
		 </if>
		 <if test="categoryList == 'it'">
		  'IT/연구개발'
		 </if>
		 <if test="categoryList == 'pr'">
		  '생산/제조/기계'
		 </if>
		 <if test="categoryList == 'op'">
		  '경영/인사/사무'
		 </if>
		 <if test="categoryList == 'of'">
		  '공무원'
		 </if>
		 <if test="categoryList == 'la'">
		  '어학'
		 </if>
		 <if test="categoryList == 'ot'">
		  '기타'
		 </if>
	    </foreach>
	    )
	</if>
	<if test="area != null" >
 		and(
		<foreach item="areaList" collection="area" separator="or ">
		 GROUP_AREA =
		 <if test="areaList == 'sez'">
		  '서울'
		 </if>
		 <if test="areaList == 'gyz'">
		  '경기'
		 </if>
		 <if test="areaList == 'inz'">
		  '인천'
		 </if>
		 <if test="areaList == 'gaz'">
		  '강원'
		 </if>
		 <if test="areaList == 'daz'">
		  '대전/충청'
		 </if>
		 <if test="areaList == 'dgz'">
		  '대구'
		 </if>
		 <if test="areaList == 'buz'">
		  '부산/울산'
		 </if>
		 <if test="areaList == 'gsz'">
		  '경상'
		 </if>
		 <if test="areaList == 'gwz'">
		  '광주/전라/제주'
		 </if>
	    </foreach>
	    )
	</if>
	
	<if test="startAge != null" >
		<if test="startAge != 0" >
			<![CDATA[
	 			AND(GROUP_START_AGE) >= ${startAge }
	 		]]>
	 	</if>	
	</if>
	
	<if test="endAge != null" >
		<if test="endAge != 0" >
			<![CDATA[
	 			AND(GROUP_END_AGE) <= ${endAge }
	 		]]>
 		</if>
	</if>
   </sql>
   
   <update id="updateCommentCnt">
   <![CDATA[
  	update STUDY_GROUPS set GROUP_COMMENT_CNT = GROUP_COMMENT_CNT + #{amount} where GROUP_ID = #{groupId}
  	]]>
	</update>
   
   <select id="chkAttend" resultType="String">
   	SELECT ATTENDANCE_STATUS FROM GROUP_ATTENDANCES
   				 WHERE GROUP_ID = #{groupId} AND SCHEDULE_ID = #{scheduleId} AND USER_ID = #{userId}
   </select>
   
   <insert id="requestAttend">
   	INSERT INTO GROUP_ATTENDANCES (GROUP_ID, SCHEDULE_ID, USER_ID, ATTENDANCE_STATUS)
   							VALUES (#{groupId}, #{scheduleId}, #{userId}, #{attendanceStatus})
   </insert>
   
   <update id="addDemerit" parameterType="GroupMemberVO">
		UPDATE GROUP_MEMBERS SET DEMERIT_CNT = DEMERIT_CNT+2
					 WHERE GROUP_ID = #{groupId} AND USER_ID = #{userId}
	</update>
   
</mapper>