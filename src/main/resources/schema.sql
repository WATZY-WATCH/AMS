CREATE TABLE IF NOT EXISTS USERS 
( 
	ID INT NOT NULL AUTO_INCREMENT, 
	USER_ID VARCHAR(45) NOT NULL, 
	USER_PW VARCHAR(100) NOT NULL, 
	USER_NAME VARCHAR(45) NOT NULL, 
	USER_EMAIL VARCHAR(45) NOT NULL, 
	ENABLED TINYINT NOT NULL DEFAULT '1', 
	USER_TYPE VARCHAR(45) NOT NULL DEFAULT 'ORIGINAL', 
	USER_TOKEN LONGTEXT, 
	REG_DATE TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, 
	MOD_DATE TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, 
	PRIMARY KEY (ID), 
	UNIQUE KEY USERID_UNIQUE (USER_ID)
);

CREATE TABLE IF NOT EXISTS AUTHORITIES 
( 
	USER_ID VARCHAR(45) NOT NULL, 
	AUTHORITY VARCHAR(45) NOT NULL DEFAULT 'USER', 
	PRIMARY KEY (USER_ID) 
);

CREATE TABLE IF NOT EXISTS STUDY_GROUPS 
( 
	GROUP_ID INT NOT NULL AUTO_INCREMENT, 
	GROUP_CATEGORY VARCHAR(45) NOT NULL, 
	GROUP_MASTER_ID VARCHAR(45) NOT NULL, 
	GROUP_NAME VARCHAR(45) NOT NULL, 
	GROUP_DETAIL LONGTEXT NOT NULL, 
	GROUP_MEMBER_LIMIT INT NOT NULL, 
	GROUP_MEMBER_CNT INT NOT NULL DEFAULT '1', 
	GROUP_PERIOD VARCHAR(45) DEFAULT NULL, 
	GROUP_AREA VARCHAR(45) NOT NULL, 
	GROUP_STATUS VARCHAR(45) NOT NULL DEFAULT '모집중', 
	GROUP_START_AGE INT DEFAULT NULL, 
	GROUP_END_AGE INT DEFAULT NULL, 
	GROUP_VIEW_CNT INT NOT NULL DEFAULT '0', 
	REG_DATE TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, 
	MOD_DATE TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, 
	GROUP_COMMENT_CNT INT NOT NULL DEFAULT '0', 
	PRIMARY KEY (GROUP_ID), 
	UNIQUE KEY GROUP_ID_UNIQUE (GROUP_ID)
);

CREATE TABLE IF NOT EXISTS GROUP_MEMBERS 
( 
	GROUP_ID INT NOT NULL AUTO_INCREMENT, 
	USER_ID VARCHAR(45) NOT NULL, 
	GROUP_AUTHORITY VARCHAR(45) NOT NULL DEFAULT 'MEMBER', 
	DEMERIT_CNT INT UNSIGNED NOT NULL DEFAULT '0', 
	REG_DATE TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, 
	MOD_DATE TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, 
	UNIQUE KEY GROUP_MEMBER_UNIQUE (GROUP_ID, USER_ID)
);

CREATE TABLE IF NOT EXISTS GROUP_APPLICATIONS 
( 
	APPLICATION_ID INT NOT NULL AUTO_INCREMENT, 
	GROUP_ID INT NOT NULL, 
	USER_ID VARCHAR(45) NOT NULL, 
	MSG LONGTEXT DEFAULT NULL, 
	REG_DATE TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, 
	PRIMARY KEY (APPLICATION_ID) 
);

CREATE TABLE IF NOT EXISTS GROUP_COMMENT 
( 
	COMMENT_ID INT NOT NULL AUTO_INCREMENT, 
	GROUP_ID INT NOT NULL, 
	USER_ID VARCHAR(45) NOT NULL, 
	COMMENT_MSG LONGTEXT NOT NULL, 
	REG_DATE TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, 
	MOD_DATE TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, 
	PRIMARY KEY (`COMMENT_ID`), 
	UNIQUE KEY `COMMENT_ID_UNIQUE` (`COMMENT_ID`) 
);

CREATE TABLE IF NOT EXISTS GROUP_SCHEDULES 
( 
	SCHEDULE_ID INT NOT NULL AUTO_INCREMENT, 
	GROUP_ID INT NOT NULL, 
	PLACE_LATITUDE DOUBLE NOT NULL, 
	PLACE_LONGITUDE DOUBLE NOT NULL, 
	PLACE_ADDRESS VARCHAR(80) DEFAULT NULL, 
	BUILDING_NAME VARCHAR(45) DEFAULT NULL, 
	BEGIN_TIME DATETIME NOT NULL, 
	END_TIME DATETIME NOT NULL, 
	REG_DATE TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, 
	MOD_DATE TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, 
	PRIMARY KEY (SCHEDULE_ID)
);

CREATE TABLE IF NOT EXISTS GROUP_ATTENDANCES 
(
  GROUP_ID INT NOT NULL,
  SCHEDULE_ID INT NOT NULL,
  USER_ID VARCHAR(45) NOT NULL,
  ATTENDANCE_STATUS VARCHAR(45) NOT NULL DEFAULT '결석',
  REG_DATE TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  MOD_DATE TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  UNIQUE KEY UK_ATTENDANCE_INFO (GROUP_ID, SCHEDULE_ID, USER_ID)
);

ALTER TABLE AUTHORITIES ADD CONSTRAINT FK_USERID FOREIGN KEY (USER_ID) REFERENCES USERS (USER_ID) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE GROUP_MEMBERS ADD CONSTRAINT FK_GROUPID FOREIGN KEY (GROUP_ID) REFERENCES STUDY_GROUPS (GROUP_ID) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE GROUP_MEMBERS ADD CONSTRAINT FK_GROUP_USERID FOREIGN KEY(USER_ID) REFERENCES USERS (USER_ID) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE GROUP_APPLICATIONS ADD CONSTRAINT FK_APP_GROUPID FOREIGN KEY (GROUP_ID) REFERENCES STUDY_GROUPS (GROUP_ID) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE GROUP_APPLICATIONS ADD CONSTRAINT FK_APP_USERID FOREIGN KEY (USER_ID) REFERENCES USERS (USER_ID) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE GROUP_COMMENT ADD CONSTRAINT FK_COMMENT_GROUPID FOREIGN KEY (GROUP_ID) REFERENCES STUDY_GROUPS (GROUP_ID) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE GROUP_SCHEDULES ADD CONSTRAINT FK_SCHEDULE_GROUPID FOREIGN KEY (GROUP_ID) REFERENCES STUDY_GROUPS (GROUP_ID) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE GROUP_ATTENDANCES ADD CONSTRAINT FK_ATTENDANCE_GROUPID FOREIGN KEY (GROUP_ID) REFERENCES STUDY_GROUPS (GROUP_ID) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE GROUP_ATTENDANCES ADD CONSTRAINT FK_ATTENDANCE_USERID FOREIGN KEY (USER_ID) REFERENCES GROUP_MEMBERS (USER_ID) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE GROUP_ATTENDANCES ADD CONSTRAINT FK_SCHEDULEID FOREIGN KEY (SCHEDULE_ID) REFERENCES GROUP_SCHEDULES (SCHEDULE_ID) ON DELETE CASCADE ON UPDATE CASCADE;